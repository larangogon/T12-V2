<?php

namespace Tests\Feature\Commands;

use App\Constants\Roles;
use App\Exports\MonthlyReportsExport;
use App\Jobs\NotifyAdminsAfterCompleteExport;
use App\Models\Admin\Admin;
use App\Models\Order;
use App\Models\OrderDetail;
use Database\Seeders\AdminSeeder;
use Database\Seeders\StockSeeder;
use Database\Seeders\TestDatabaseSeeder;
use Database\Seeders\UserSeeder;
use Illuminate\Support\Facades\Queue;
use Maatwebsite\Excel\Facades\Excel;
use Tests\TestCase;

class CommandGenerateMonthlyReportTest extends TestCase
{

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->seed([
            TestDatabaseSeeder::class,
            UserSeeder::class,
            StockSeeder::class,
        ]);
        factory(Order::class, 10)->create([
            'created_at' => now()->subMonth()->format('Y-m-d')
        ]);

        Order::all()->each(function ($order) {
            factory(OrderDetail::class)->create([
                'order_id' => $order->id
            ]);
        });
    }

    /**
     *
     * @return void
     */
    public function testGenerateMonthlyReportWithoutAdmin()
    {
        Excel::fake();
        Queue::fake();
        $this->artisan('report:monthly', [
            'date' => now()->subMonth()->format('Y-m-d')
        ])->assertExitCode(0);

        Queue::assertNotPushed(MonthlyReportsExport::class);
        Queue::assertNotPushed(NotifyAdminsAfterCompleteExport::class);
    }

    /**
     *
     * @return void
     */
    public function testGenerateMonthlyReportWithAdmin()
    {
        $admin = factory(Admin::class)->create();
        $admin->assignRole(Roles::ADMIN);
        Excel::fake();
        Queue::fake();
        $this->artisan('report:monthly', [
            'date' => now()->subMonth()->format('Y-m-d'),
            '--admin' => $admin->id
        ])->assertExitCode(0);

        Excel::matchByRegex();
        Excel::assertStored('/report_monthly_\d{10}.xlsx/', 'exports');
        Excel::assertQueued('/report_monthly_\d{10}.xlsx/', 'exports', function (MonthlyReportsExport $export) {
            return true;
        });
    }
}
