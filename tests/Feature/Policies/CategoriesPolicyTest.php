<?php

namespace Tests\Feature\Policies;

use App\Constants\Admins;
use App\Constants\Permissions;
use App\Models\Admin\Admin;
use App\Models\Category;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Database\Seeders\PermissionSeeder;
use Database\Seeders\RoleSeeder;
use Spatie\Permission\Models\Role;
use Tests\TestCase;

class CategoriesPolicyTest extends TestCase
{
    use RefreshDatabase;

    private $admin;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->seed([
            PermissionSeeder::class,
            RoleSeeder::class,
        ]);
        $this->admin = factory(Admin::class)->create();
    }

    public function testIndexNotAuthorized(): void
    {
        $response = $this->actingAs($this->admin, Admins::GUARDED)->get(route('category.index'));

        $response->assertStatus(403);
    }

    public function testAdminWithoutPermissionCannotUpdateCategories(): void
    {
        $id = factory(Category::class)->create()->id;
        $response = $this->actingAs($this->admin, Admins::GUARDED)
            ->put(route('category.update', $id));

        $response->assertStatus(403);
    }

    public function testAdminWithoutPermissionCannotDeleteACategory(): void
    {
        $id = factory(Category::class)->create()->id;
        $response = $this->actingAs($this->admin, Admins::GUARDED)
            ->delete(route('category.destroy', $id));

        $response->assertStatus(403);
    }

    public function testAdminWithoutPermissionCannotCreateCategories(): void
    {
        $response = $this->actingAs($this->admin, Admins::GUARDED)
            ->post(route('category.store'), [
                'name' => 'new category',
                'id_parent' => null,
            ]);

        $response->assertStatus(403);
    }

    public function testAllCategoryRoutesWithPermissions(): void
    {
        $id = factory(Category::class)->create()->id;
        $role = factory(Role::class)->create();

        $role->syncPermissions([
            Permissions::VIEW_CATEGORIES,
            Permissions::CREATE_CATEGORIES,
            Permissions::EDIT_CATEGORIES,
            Permissions::DELETE_CATEGORIES,
        ]);

        $this->admin->assignRole($role->name);

        $this->actingAs($this->admin, Admins::GUARDED)
            ->get(route('category.index'))->assertStatus(200);

        $this->actingAs($this->admin, Admins::GUARDED)
            ->put(route('category.update', $id))->assertStatus(302);

        $this->actingAs($this->admin, Admins::GUARDED)
            ->delete(route('category.destroy', $id))->assertStatus(302);

        $this->actingAs($this->admin, Admins::GUARDED)->post(route('category.store', $id), [
            'name' => 'NEW CATEGORY',
            'id_parent' => null,
        ])->assertStatus(302);
    }
}
