<?php

namespace Tests\Feature\Http\Controllers\Api;

use App\Constants\Roles;
use App\Models\Admin\Admin;
use App\Models\Color;
use App\Models\Size;
use App\Models\Stock;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Database\Seeders\TestDatabaseSeeder;
use Tests\TestCase;

class ApiStocksControllerTest extends TestCase
{
    use RefreshDatabase;
    use WithFaker;

    private Admin $admin;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->seed([
            TestDatabaseSeeder::class,
        ]);

        $this->admin = factory(Admin::class)->create();
        $this->admin->assignRole(Roles::ADMIN);
    }

    public function testAnAdminAuthenticatedCanUpdateAStock(): void
    {
        $stock = factory(Stock::class)->create();
        $size = Size::all()->random();
        $color = Color::all()->random();

        $response = $this->putJson(route('api.stocks.update', $stock->id), [
            'api_token' => $this->admin->api_token,
            'color'     => $color->name,
            'type_size'  => $size->type->name,
            'size'  => $size->name,
            'quantity'  => 50,
        ]);

        $response
            ->assertStatus(200)
            ->assertJson([
                'status' => [
                    'status'  => 'OK',
                    'message' => trans('messages.crud', [
                        'resource' => trans('products.stock'),
                        'status' => trans('fields.updated')
                    ]),
                ],
                'stock' => [
                    'product_id' => $stock->product->id,
                    'color_id' => $color->id,
                    'size_id' => $size->id,
                    'quantity' => 50,
                ],
            ]);
    }
}
